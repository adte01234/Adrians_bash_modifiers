#!/bin/bash

STR="source ~/Adrians_bash_modifiers/source_everytime"
if ! grep -q "$STR" "$HOME/.bashrc"; then
  printf "$STR #Added by run_once script\n" >> ~/.bashrc
  printf "Added the source line to ~/.bashrc\n"
fi

STR="set tabstospaces"
if ! grep -q "$STR" "$HOME/.nanorc"; then
  printf "$STR #Added by run_once script\n" >> ~/.nanorc
  printf "Set nano tabs to spaces\n"
fi

STR="set tabsize 2"
if ! grep -q "$STR" "$HOME/.nanorc"; then
  printf "$STR #Added by run_once script\n" >> ~/.nanorc
  printf "Set nano tabsize to 2\n"
fi

if ! test -f "$HOME/.ssh/id_rsa"; then
  echo "Creating a private ssh key"
  printf "\n\n\n" | ssh-keygen
else
  printf "You already have a private ssh key\n"
fi


read -p "Add ssh keys (y/n)?: " -r
echo
case "$REPLY" in
  y|Y )

    # For data.cs.purdue.edu
    server="data.cs.purdue.edu"
    read -p "Enter username for $server: " -r
    if [ -z "$REPLY" ]; then
      REPLY=$USER
    fi
    ssh -q -oBatchMode=yes $REPLY@$server exit
    if [ $? -ne 0 ]; then
      ssh-copy-id $REPLY@$server
      printf "Added SSH key to $server\n"
    else
      printf "SSH Key already existed at $server\n"
    fi
    echo

     # For cuda.cs.purdue.edu
    server="cuda.cs.purdue.edu"
    read -p "Enter username for $server: " -r
    if [ -z "$REPLY" ]; then
      REPLY=$USER
    fi
    ssh -q -oBatchMode=yes $REPLY@$server exit
    if [ $? -ne 0 ]; then
      ssh-copy-id $REPLY@$server
      printf "Added SSH key to $server\n"
    else
      printf "SSH Key already existed at $server\n"
    fi
    echo

    # For R (STAT 350)
    server="scholar.rcac.purdue.edu"
    read -p "Enter username for $server: " -r
    if [ -z "$REPLY" ]; then
      REPLY=$USER
    fi
    ssh -q -oBatchMode=yes $REPLY@$server exit
    if [ $? -ne 0 ]; then
      ssh-copy-id $REPLY@$server
      printf "Added SSH key to $server\n"
    else
      printf "SSH Key already existed at $server\n"
    fi
    echo

    # For GitHub
    printf "GitHub no longer supports using a username and password through curl.\n"
    printf "You will need to do this manually at their website\n"
    echo

    read -p "Enter GitHub email: " -r
    while [ -z "$REPLY" ]; do
      read -p "Enter GitHub email: " -r
    done
    git config --global user.email "$REPLY"
    read -p "Enter GitHub Name: " -r
    while [ -z "$REPLY" ]; do
      read -p "Enter GitHub Name: " -r
    done
    git config --global user.name "$REPLY"

  ;;
  n|N )
    printf "The keys will not be added\n"
  ;;
  * )
    printf "Dumbass, can\'t even type y\n"
  ;;
esac

read -p "Do you want to install sl? (y/n): " -r
echo
case $REPLY in
  y|Y )
    sudo apt install sl <<< "y" >&/dev/null
  ;;
  * )
    echo "Skipping"
  ;;
esac

echo
printf "TODO: Add AWS"
printf "TODO: Set REPLY to \"\" after every read\n"
echo

exit 0
